/*
Files list:

http://cdn.bootcss.com/respond.js/1.3.0/respond.min.js
/js/jquery.min.js
/js/jquery-migrate-1.2.1.min.js
/js/bootstrap/bootstrap.min.js
/js/bootstrap-dialog.js
/js/bootstrap/ext/zi/zmodal.js
/js/bootstrap/twitter-bootstrap-hover-dropdown.min.js
/js/common.js
/js/megamenu/jquery.megamenu.js
/js/topmenu.js
/js/sudu.js
zajaxloader(/js/bootstrap/ext/zi/zmodal.js片段)
*/

/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */
/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */
/* HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries */
//http://cdn.bootcss.com/respond.js/1.3.0/respond.min.js
window.matchMedia = window.matchMedia || function(a) { "use strict"; var c, d = a.documentElement, e = d.firstElementChild || d.firstChild, f = a.createElement("body"), g = a.createElement("div"); return g.id = "mq-test-1", g.style.cssText = "position:absolute;top:-100em", f.style.background = "none", f.appendChild(g), function(a) { return g.innerHTML = '&shy;<style media="' + a + '"> #mq-test-1 { width: 42px; }</style>', d.insertBefore(f, e), c = 42 === g.offsetWidth, d.removeChild(f), { matches: c, media: a} } } (document);

/*! Respond.js v1.3.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. j.mp/respondjs  */
(function(a) { "use strict"; function x() { u(!0) } var b = {}; if (a.respond = b, b.update = function() { }, b.mediaQueriesSupported = a.matchMedia && a.matchMedia("only all").matches, !b.mediaQueriesSupported) { var q, r, t, c = a.document, d = c.documentElement, e = [], f = [], g = [], h = {}, i = 30, j = c.getElementsByTagName("head")[0] || d, k = c.getElementsByTagName("base")[0], l = j.getElementsByTagName("link"), m = [], n = function() { for (var b = 0; l.length > b; b++) { var c = l[b], d = c.href, e = c.media, f = c.rel && "stylesheet" === c.rel.toLowerCase(); d && f && !h[d] && (c.styleSheet && c.styleSheet.rawCssText ? (p(c.styleSheet.rawCssText, d, e), h[d] = !0) : (!/^([a-zA-Z:]*\/\/)/.test(d) && !k || d.replace(RegExp.$1, "").split("/")[0] === a.location.host) && m.push({ href: d, media: e })) } o() }, o = function() { if (m.length) { var b = m.shift(); v(b.href, function(c) { p(c, b.href, b.media), h[b.href] = !0, a.setTimeout(function() { o() }, 0) }) } }, p = function(a, b, c) { var d = a.match(/@media[^\{]+\{([^\{\}]*\{[^\}\{]*\})+/gi), g = d && d.length || 0; b = b.substring(0, b.lastIndexOf("/")); var h = function(a) { return a.replace(/(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g, "$1" + b + "$2$3") }, i = !g && c; b.length && (b += "/"), i && (g = 1); for (var j = 0; g > j; j++) { var k, l, m, n; i ? (k = c, f.push(h(a))) : (k = d[j].match(/@media *([^\{]+)\{([\S\s]+?)$/) && RegExp.$1, f.push(RegExp.$2 && h(RegExp.$2))), m = k.split(","), n = m.length; for (var o = 0; n > o; o++) l = m[o], e.push({ media: l.split("(")[0].match(/(only\s+)?([a-zA-Z]+)\s?/) && RegExp.$2 || "all", rules: f.length - 1, hasquery: l.indexOf("(") > -1, minw: l.match(/\(\s*min\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/) && parseFloat(RegExp.$1) + (RegExp.$2 || ""), maxw: l.match(/\(\s*max\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/) && parseFloat(RegExp.$1) + (RegExp.$2 || "") }) } u() }, s = function() { var a, b = c.createElement("div"), e = c.body, f = !1; return b.style.cssText = "position:absolute;font-size:1em;width:1em", e || (e = f = c.createElement("body"), e.style.background = "none"), e.appendChild(b), d.insertBefore(e, d.firstChild), a = b.offsetWidth, f ? d.removeChild(e) : e.removeChild(b), a = t = parseFloat(a) }, u = function(b) { var h = "clientWidth", k = d[h], m = "CSS1Compat" === c.compatMode && k || c.body[h] || k, n = {}, o = l[l.length - 1], p = (new Date).getTime(); if (b && q && i > p - q) return a.clearTimeout(r), r = a.setTimeout(u, i), void 0; q = p; for (var v in e) if (e.hasOwnProperty(v)) { var w = e[v], x = w.minw, y = w.maxw, z = null === x, A = null === y, B = "em"; x && (x = parseFloat(x) * (x.indexOf(B) > -1 ? t || s() : 1)), y && (y = parseFloat(y) * (y.indexOf(B) > -1 ? t || s() : 1)), w.hasquery && (z && A || !(z || m >= x) || !(A || y >= m)) || (n[w.media] || (n[w.media] = []), n[w.media].push(f[w.rules])) } for (var C in g) g.hasOwnProperty(C) && g[C] && g[C].parentNode === j && j.removeChild(g[C]); for (var D in n) if (n.hasOwnProperty(D)) { var E = c.createElement("style"), F = n[D].join("\n"); E.type = "text/css", E.media = D, j.insertBefore(E, o.nextSibling), E.styleSheet ? E.styleSheet.cssText = F : E.appendChild(c.createTextNode(F)), g.push(E) } }, v = function(a, b) { var c = w(); c && (c.open("GET", a, !0), c.onreadystatechange = function() { 4 !== c.readyState || 200 !== c.status && 304 !== c.status || b(c.responseText) }, 4 !== c.readyState && c.send(null)) }, w = function() { var b = !1; try { b = new a.XMLHttpRequest } catch (c) { b = new a.ActiveXObject("Microsoft.XMLHTTP") } return function() { return b } } (); n(), b.update = n, a.addEventListener ? a.addEventListener("resize", x, !1) : a.attachEvent && a.attachEvent("onresize", x) } })(this);

//==========================
//js/jquery-migrate-1.2.1.min.js
/*! jQuery Migrate v1.2.1 | (c) 2005, 2013 jQuery Foundation, Inc. and other contributors | jquery.org/license */
jQuery.migrateMute === void 0 && (jQuery.migrateMute = !0), function(e, t, n) { function r(n) { var r = t.console; i[n] || (i[n] = !0, e.migrateWarnings.push(n), r && r.warn && !e.migrateMute && (r.warn("JQMIGRATE: " + n), e.migrateTrace && r.trace && r.trace())) } function a(t, a, i, o) { if (Object.defineProperty) try { return Object.defineProperty(t, a, { configurable: !0, enumerable: !0, get: function() { return r(o), i }, set: function(e) { r(o), i = e } }), n } catch (s) { } e._definePropertyBroken = !0, t[a] = i } var i = {}; e.migrateWarnings = [], !e.migrateMute && t.console && t.console.log && t.console.log("JQMIGRATE: Logging is active"), e.migrateTrace === n && (e.migrateTrace = !0), e.migrateReset = function() { i = {}, e.migrateWarnings.length = 0 }, "BackCompat" === document.compatMode && r("jQuery is not compatible with Quirks Mode"); var o = e("<input/>", { size: 1 }).attr("size") && e.attrFn, s = e.attr, u = e.attrHooks.value && e.attrHooks.value.get || function() { return null }, c = e.attrHooks.value && e.attrHooks.value.set || function() { return n }, l = /^(?:input|button)$/i, d = /^[238]$/, p = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, f = /^(?:checked|selected)$/i; a(e, "attrFn", o || {}, "jQuery.attrFn is deprecated"), e.attr = function(t, a, i, u) { var c = a.toLowerCase(), g = t && t.nodeType; return u && (4 > s.length && r("jQuery.fn.attr( props, pass ) is deprecated"), t && !d.test(g) && (o ? a in o : e.isFunction(e.fn[a]))) ? e(t)[a](i) : ("type" === a && i !== n && l.test(t.nodeName) && t.parentNode && r("Can't change the 'type' of an input or button in IE 6/7/8"), !e.attrHooks[c] && p.test(c) && (e.attrHooks[c] = { get: function(t, r) { var a, i = e.prop(t, r); return i === !0 || "boolean" != typeof i && (a = t.getAttributeNode(r)) && a.nodeValue !== !1 ? r.toLowerCase() : n }, set: function(t, n, r) { var a; return n === !1 ? e.removeAttr(t, r) : (a = e.propFix[r] || r, a in t && (t[a] = !0), t.setAttribute(r, r.toLowerCase())), r } }, f.test(c) && r("jQuery.fn.attr('" + c + "') may use property instead of attribute")), s.call(e, t, a, i)) }, e.attrHooks.value = { get: function(e, t) { var n = (e.nodeName || "").toLowerCase(); return "button" === n ? u.apply(this, arguments) : ("input" !== n && "option" !== n && r("jQuery.fn.attr('value') no longer gets properties"), t in e ? e.value : null) }, set: function(e, t) { var a = (e.nodeName || "").toLowerCase(); return "button" === a ? c.apply(this, arguments) : ("input" !== a && "option" !== a && r("jQuery.fn.attr('value', val) no longer sets properties"), e.value = t, n) } }; var g, h, v = e.fn.init, m = e.parseJSON, y = /^([^<]*)(<[\w\W]+>)([^>]*)$/; e.fn.init = function(t, n, a) { var i; return t && "string" == typeof t && !e.isPlainObject(n) && (i = y.exec(e.trim(t))) && i[0] && ("<" !== t.charAt(0) && r("$(html) HTML strings must start with '<' character"), i[3] && r("$(html) HTML text after last tag is ignored"), "#" === i[0].charAt(0) && (r("HTML string cannot start with a '#' character"), e.error("JQMIGRATE: Invalid selector string (XSS)")), n && n.context && (n = n.context), e.parseHTML) ? v.call(this, e.parseHTML(i[2], n, !0), n, a) : v.apply(this, arguments) }, e.fn.init.prototype = e.fn, e.parseJSON = function(e) { return e || null === e ? m.apply(this, arguments) : (r("jQuery.parseJSON requires a valid JSON string"), null) }, e.uaMatch = function(e) { e = e.toLowerCase(); var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || 0 > e.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []; return { browser: t[1] || "", version: t[2] || "0"} }, e.browser || (g = e.uaMatch(navigator.userAgent), h = {}, g.browser && (h[g.browser] = !0, h.version = g.version), h.chrome ? h.webkit = !0 : h.webkit && (h.safari = !0), e.browser = h), a(e, "browser", e.browser, "jQuery.browser is deprecated"), e.sub = function() { function t(e, n) { return new t.fn.init(e, n) } e.extend(!0, t, this), t.superclass = this, t.fn = t.prototype = this(), t.fn.constructor = t, t.sub = this.sub, t.fn.init = function(r, a) { return a && a instanceof e && !(a instanceof t) && (a = t(a)), e.fn.init.call(this, r, a, n) }, t.fn.init.prototype = t.fn; var n = t(document); return r("jQuery.sub() is deprecated"), t }, e.ajaxSetup({ converters: { "text json": e.parseJSON} }); var b = e.fn.data; e.fn.data = function(t) { var a, i, o = this[0]; return !o || "events" !== t || 1 !== arguments.length || (a = e.data(o, t), i = e._data(o, t), a !== n && a !== i || i === n) ? b.apply(this, arguments) : (r("Use of jQuery.fn.data('events') is deprecated"), i) }; var j = /\/(java|ecma)script/i, w = e.fn.andSelf || e.fn.addBack; e.fn.andSelf = function() { return r("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"), w.apply(this, arguments) }, e.clean || (e.clean = function(t, a, i, o) { a = a || document, a = !a.nodeType && a[0] || a, a = a.ownerDocument || a, r("jQuery.clean() is deprecated"); var s, u, c, l, d = []; if (e.merge(d, e.buildFragment(t, a).childNodes), i) for (c = function(e) { return !e.type || j.test(e.type) ? o ? o.push(e.parentNode ? e.parentNode.removeChild(e) : e) : i.appendChild(e) : n }, s = 0; null != (u = d[s]); s++) e.nodeName(u, "script") && c(u) || (i.appendChild(u), u.getElementsByTagName !== n && (l = e.grep(e.merge([], u.getElementsByTagName("script")), c), d.splice.apply(d, [s + 1, 0].concat(l)), s += l.length)); return d }); var Q = e.event.add, x = e.event.remove, k = e.event.trigger, N = e.fn.toggle, T = e.fn.live, M = e.fn.die, S = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess", C = RegExp("\\b(?:" + S + ")\\b"), H = /(?:^|\s)hover(\.\S+|)\b/, A = function(t) { return "string" != typeof t || e.event.special.hover ? t : (H.test(t) && r("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"), t && t.replace(H, "mouseenter$1 mouseleave$1")) }; e.event.props && "attrChange" !== e.event.props[0] && e.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"), e.event.dispatch && a(e.event, "handle", e.event.dispatch, "jQuery.event.handle is undocumented and deprecated"), e.event.add = function(e, t, n, a, i) { e !== document && C.test(t) && r("AJAX events should be attached to document: " + t), Q.call(this, e, A(t || ""), n, a, i) }, e.event.remove = function(e, t, n, r, a) { x.call(this, e, A(t) || "", n, r, a) }, e.fn.error = function() { var e = Array.prototype.slice.call(arguments, 0); return r("jQuery.fn.error() is deprecated"), e.splice(0, 0, "error"), arguments.length ? this.bind.apply(this, e) : (this.triggerHandler.apply(this, e), this) }, e.fn.toggle = function(t, n) { if (!e.isFunction(t) || !e.isFunction(n)) return N.apply(this, arguments); r("jQuery.fn.toggle(handler, handler...) is deprecated"); var a = arguments, i = t.guid || e.guid++, o = 0, s = function(n) { var r = (e._data(this, "lastToggle" + t.guid) || 0) % o; return e._data(this, "lastToggle" + t.guid, r + 1), n.preventDefault(), a[r].apply(this, arguments) || !1 }; for (s.guid = i; a.length > o; ) a[o++].guid = i; return this.click(s) }, e.fn.live = function(t, n, a) { return r("jQuery.fn.live() is deprecated"), T ? T.apply(this, arguments) : (e(this.context).on(t, this.selector, n, a), this) }, e.fn.die = function(t, n) { return r("jQuery.fn.die() is deprecated"), M ? M.apply(this, arguments) : (e(this.context).off(t, this.selector || "**", n), this) }, e.event.trigger = function(e, t, n, a) { return n || C.test(e) || r("Global events are undocumented and deprecated"), k.call(this, e, t, n || document, a) }, e.each(S.split("|"), function(t, n) { e.event.special[n] = { setup: function() { var t = this; return t !== document && (e.event.add(document, n + "." + e.guid, function() { e.event.trigger(n, null, t, !0) }), e._data(this, n, e.guid++)), !1 }, teardown: function() { return this !== document && e.event.remove(document, n + "." + e._data(this, n)), !1 } } }) } (jQuery, window);


//============================
//js/bootstrap/bootstrap.min.js
/**
* bootstrap.js v3.0.0 by @fat and @mdo
* Copyright 2013 Twitter Inc.
* http://www.apache.org/licenses/LICENSE-2.0
*/
if (!jQuery) throw new Error("Bootstrap requires jQuery"); +function(a) { "use strict"; function b() { var a = document.createElement("bootstrap"), b = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" }; for (var c in b) if (void 0 !== a.style[c]) return { end: b[c]} } a.fn.emulateTransitionEnd = function(b) { var c = !1, d = this; a(this).one(a.support.transition.end, function() { c = !0 }); var e = function() { c || a(d).trigger(a.support.transition.end) }; return setTimeout(e, b), this }, a(function() { a.support.transition = b() }) } (window.jQuery), +function(a) { "use strict"; var b = '[data-dismiss="alert"]', c = function(c) { a(c).on("click", b, this.close) }; c.prototype.close = function(b) { function c() { f.trigger("closed.bs.alert").remove() } var d = a(this), e = d.attr("data-target"); e || (e = d.attr("href"), e = e && e.replace(/.*(?=#[^\s]*$)/, "")); var f = a(e); b && b.preventDefault(), f.length || (f = d.hasClass("alert") ? d : d.parent()), f.trigger(b = a.Event("close.bs.alert")), b.isDefaultPrevented() || (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one(a.support.transition.end, c).emulateTransitionEnd(150) : c()) }; var d = a.fn.alert; a.fn.alert = function(b) { return this.each(function() { var d = a(this), e = d.data("bs.alert"); e || d.data("bs.alert", e = new c(this)), "string" == typeof b && e[b].call(d) }) }, a.fn.alert.Constructor = c, a.fn.alert.noConflict = function() { return a.fn.alert = d, this }, a(document).on("click.bs.alert.data-api", b, c.prototype.close) } (window.jQuery), +function(a) { "use strict"; var b = function(c, d) { this.$element = a(c), this.options = a.extend({}, b.DEFAULTS, d) }; b.DEFAULTS = { loadingText: "loading..." }, b.prototype.setState = function(a) { var b = "disabled", c = this.$element, d = c.is("input") ? "val" : "html", e = c.data(); a += "Text", e.resetText || c.data("resetText", c[d]()), c[d](e[a] || this.options[a]), setTimeout(function() { "loadingText" == a ? c.addClass(b).attr(b, b) : c.removeClass(b).removeAttr(b) }, 0) }, b.prototype.toggle = function() { var a = this.$element.closest('[data-toggle="buttons"]'); if (a.length) { var b = this.$element.find("input").prop("checked", !this.$element.hasClass("active")).trigger("change"); "radio" === b.prop("type") && a.find(".active").removeClass("active") } this.$element.toggleClass("active") }; var c = a.fn.button; a.fn.button = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.button"), f = "object" == typeof c && c; e || d.data("bs.button", e = new b(this, f)), "toggle" == c ? e.toggle() : c && e.setState(c) }) }, a.fn.button.Constructor = b, a.fn.button.noConflict = function() { return a.fn.button = c, this }, a(document).on("click.bs.button.data-api", "[data-toggle^=button]", function(b) { var c = a(b.target); c.hasClass("btn") || (c = c.closest(".btn")), c.button("toggle"), b.preventDefault() }) } (window.jQuery), +function(a) { "use strict"; var b = function(b, c) { this.$element = a(b), this.$indicators = this.$element.find(".carousel-indicators"), this.options = c, this.paused = this.sliding = this.interval = this.$active = this.$items = null, "hover" == this.options.pause && this.$element.on("mouseenter", a.proxy(this.pause, this)).on("mouseleave", a.proxy(this.cycle, this)) }; b.DEFAULTS = { interval: 5e3, pause: "hover", wrap: !0 }, b.prototype.cycle = function(b) { return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this }, b.prototype.getActiveIndex = function() { return this.$active = this.$element.find(".item.active"), this.$items = this.$active.parent().children(), this.$items.index(this.$active) }, b.prototype.to = function(b) { var c = this, d = this.getActiveIndex(); return b > this.$items.length - 1 || 0 > b ? void 0 : this.sliding ? this.$element.one("slid", function() { c.to(b) }) : d == b ? this.pause().cycle() : this.slide(b > d ? "next" : "prev", a(this.$items[b])) }, b.prototype.pause = function(b) { return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition.end && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this }, b.prototype.next = function() { return this.sliding ? void 0 : this.slide("next") }, b.prototype.prev = function() { return this.sliding ? void 0 : this.slide("prev") }, b.prototype.slide = function(b, c) { var d = this.$element.find(".item.active"), e = c || d[b](), f = this.interval, g = "next" == b ? "left" : "right", h = "next" == b ? "first" : "last", i = this; if (!e.length) { if (!this.options.wrap) return; e = this.$element.find(".item")[h]() } this.sliding = !0, f && this.pause(); var j = a.Event("slide.bs.carousel", { relatedTarget: e[0], direction: g }); if (!e.hasClass("active")) { if (this.$indicators.length && (this.$indicators.find(".active").removeClass("active"), this.$element.one("slid", function() { var b = a(i.$indicators.children()[i.getActiveIndex()]); b && b.addClass("active") })), a.support.transition && this.$element.hasClass("slide")) { if (this.$element.trigger(j), j.isDefaultPrevented()) return; e.addClass(b), e[0].offsetWidth, d.addClass(g), e.addClass(g), d.one(a.support.transition.end, function() { e.removeClass([b, g].join(" ")).addClass("active"), d.removeClass(["active", g].join(" ")), i.sliding = !1, setTimeout(function() { i.$element.trigger("slid") }, 0) }).emulateTransitionEnd(600) } else { if (this.$element.trigger(j), j.isDefaultPrevented()) return; d.removeClass("active"), e.addClass("active"), this.sliding = !1, this.$element.trigger("slid") } return f && this.cycle(), this } }; var c = a.fn.carousel; a.fn.carousel = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.carousel"), f = a.extend({}, b.DEFAULTS, d.data(), "object" == typeof c && c), g = "string" == typeof c ? c : f.slide; e || d.data("bs.carousel", e = new b(this, f)), "number" == typeof c ? e.to(c) : g ? e[g]() : f.interval && e.pause().cycle() }) }, a.fn.carousel.Constructor = b, a.fn.carousel.noConflict = function() { return a.fn.carousel = c, this }, a(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", function(b) { var c, d = a(this), e = a(d.attr("data-target") || (c = d.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, "")), f = a.extend({}, e.data(), d.data()), g = d.attr("data-slide-to"); g && (f.interval = !1), e.carousel(f), (g = d.attr("data-slide-to")) && e.data("bs.carousel").to(g), b.preventDefault() }), a(window).on("load", function() { a('[data-ride="carousel"]').each(function() { var b = a(this); b.carousel(b.data()) }) }) } (window.jQuery), +function(a) { "use strict"; var b = function(c, d) { this.$element = a(c), this.options = a.extend({}, b.DEFAULTS, d), this.transitioning = null, this.options.parent && (this.$parent = a(this.options.parent)), this.options.toggle && this.toggle() }; b.DEFAULTS = { toggle: !0 }, b.prototype.dimension = function() { var a = this.$element.hasClass("width"); return a ? "width" : "height" }, b.prototype.show = function() { if (!this.transitioning && !this.$element.hasClass("in")) { var b = a.Event("show.bs.collapse"); if (this.$element.trigger(b), !b.isDefaultPrevented()) { var c = this.$parent && this.$parent.find("> .panel > .in"); if (c && c.length) { var d = c.data("bs.collapse"); if (d && d.transitioning) return; c.collapse("hide"), d || c.data("bs.collapse", null) } var e = this.dimension(); this.$element.removeClass("collapse").addClass("collapsing")[e](0), this.transitioning = 1; var f = function() { this.$element.removeClass("collapsing").addClass("in")[e]("auto"), this.transitioning = 0, this.$element.trigger("shown.bs.collapse") }; if (!a.support.transition) return f.call(this); var g = a.camelCase(["scroll", e].join("-")); this.$element.one(a.support.transition.end, a.proxy(f, this)).emulateTransitionEnd(350)[e](this.$element[0][g]) } } }, b.prototype.hide = function() { if (!this.transitioning && this.$element.hasClass("in")) { var b = a.Event("hide.bs.collapse"); if (this.$element.trigger(b), !b.isDefaultPrevented()) { var c = this.dimension(); this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"), this.transitioning = 1; var d = function() { this.transitioning = 0, this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse") }; return a.support.transition ? (this.$element[c](0).one(a.support.transition.end, a.proxy(d, this)).emulateTransitionEnd(350), void 0) : d.call(this) } } }, b.prototype.toggle = function() { this[this.$element.hasClass("in") ? "hide" : "show"]() }; var c = a.fn.collapse; a.fn.collapse = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.collapse"), f = a.extend({}, b.DEFAULTS, d.data(), "object" == typeof c && c); e || d.data("bs.collapse", e = new b(this, f)), "string" == typeof c && e[c]() }) }, a.fn.collapse.Constructor = b, a.fn.collapse.noConflict = function() { return a.fn.collapse = c, this }, a(document).on("click.bs.collapse.data-api", "[data-toggle=collapse]", function(b) { var c, d = a(this), e = d.attr("data-target") || b.preventDefault() || (c = d.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, ""), f = a(e), g = f.data("bs.collapse"), h = g ? "toggle" : d.data(), i = d.attr("data-parent"), j = i && a(i); g && g.transitioning || (j && j.find('[data-toggle=collapse][data-parent="' + i + '"]').not(d).addClass("collapsed"), d[f.hasClass("in") ? "addClass" : "removeClass"]("collapsed")), f.collapse(h) }) } (window.jQuery), +function(a) { "use strict"; function b() { a(d).remove(), a(e).each(function(b) { var d = c(a(this)); d.hasClass("open") && (d.trigger(b = a.Event("hide.bs.dropdown")), b.isDefaultPrevented() || d.removeClass("open").trigger("hidden.bs.dropdown")) }) } function c(b) { var c = b.attr("data-target"); c || (c = b.attr("href"), c = c && /#/.test(c) && c.replace(/.*(?=#[^\s]*$)/, "")); var d = c && a(c); return d && d.length ? d : b.parent() } var d = ".dropdown-backdrop", e = "[data-toggle=dropdown]", f = function(b) { a(b).on("click.bs.dropdown", this.toggle) }; f.prototype.toggle = function(d) { var e = a(this); if (!e.is(".disabled, :disabled")) { var f = c(e), g = f.hasClass("open"); if (b(), !g) { if ("ontouchstart" in document.documentElement && !f.closest(".navbar-nav").length && a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click", b), f.trigger(d = a.Event("show.bs.dropdown")), d.isDefaultPrevented()) return; f.toggleClass("open").trigger("shown.bs.dropdown"), e.focus() } return !1 } }, f.prototype.keydown = function(b) { if (/(38|40|27)/.test(b.keyCode)) { var d = a(this); if (b.preventDefault(), b.stopPropagation(), !d.is(".disabled, :disabled")) { var f = c(d), g = f.hasClass("open"); if (!g || g && 27 == b.keyCode) return 27 == b.which && f.find(e).focus(), d.click(); var h = a("[role=menu] li:not(.divider):visible a", f); if (h.length) { var i = h.index(h.filter(":focus")); 38 == b.keyCode && i > 0 && i--, 40 == b.keyCode && i < h.length - 1 && i++, ~i || (i = 0), h.eq(i).focus() } } } }; var g = a.fn.dropdown; a.fn.dropdown = function(b) { return this.each(function() { var c = a(this), d = c.data("dropdown"); d || c.data("dropdown", d = new f(this)), "string" == typeof b && d[b].call(c) }) }, a.fn.dropdown.Constructor = f, a.fn.dropdown.noConflict = function() { return a.fn.dropdown = g, this }, a(document).on("click.bs.dropdown.data-api", b).on("click.bs.dropdown.data-api", ".dropdown form", function(a) { a.stopPropagation() }).on("click.bs.dropdown.data-api", e, f.prototype.toggle).on("keydown.bs.dropdown.data-api", e + ", [role=menu]", f.prototype.keydown) } (window.jQuery), +function(a) { "use strict"; var b = function(b, c) { this.options = c, this.$element = a(b), this.$backdrop = this.isShown = null, this.options.remote && this.$element.load(this.options.remote) }; b.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }, b.prototype.toggle = function(a) { return this[this.isShown ? "hide" : "show"](a) }, b.prototype.show = function(b) { var c = this, d = a.Event("show.bs.modal", { relatedTarget: b }); this.$element.trigger(d), this.isShown || d.isDefaultPrevented() || (this.isShown = !0, this.escape(), this.$element.on("click.dismiss.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.backdrop(function() { var d = a.support.transition && c.$element.hasClass("fade"); c.$element.parent().length || c.$element.appendTo(document.body), c.$element.show(), d && c.$element[0].offsetWidth, c.$element.addClass("in").attr("aria-hidden", !1), c.enforceFocus(); var e = a.Event("shown.bs.modal", { relatedTarget: b }); d ? c.$element.find(".modal-dialog").one(a.support.transition.end, function() { c.$element.focus().trigger(e) }).emulateTransitionEnd(300) : c.$element.focus().trigger(e) })) }, b.prototype.hide = function(b) { b && b.preventDefault(), b = a.Event("hide.bs.modal"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one(a.support.transition.end, a.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal()) }, b.prototype.enforceFocus = function() { a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function(a) { this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.focus() }, this)) }, b.prototype.escape = function() { this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.bs.modal", a.proxy(function(a) { 27 == a.which && this.hide() }, this)) : this.isShown || this.$element.off("keyup.dismiss.bs.modal") }, b.prototype.hideModal = function() { var a = this; this.$element.hide(), this.backdrop(function() { a.removeBackdrop(), a.$element.trigger("hidden.bs.modal") }) }, b.prototype.removeBackdrop = function() { this.$backdrop && this.$backdrop.remove(), this.$backdrop = null }, b.prototype.backdrop = function(b) { var c = this.$element.hasClass("fade") ? "fade" : ""; if (this.isShown && this.options.backdrop) { var d = a.support.transition && c; if (this.$backdrop = a('<div class="modal-backdrop ' + c + '" />').appendTo(document.body), this.$element.on("click.dismiss.modal", a.proxy(function(a) { a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus.call(this.$element[0]) : false/*this.hide.call(this)*/) }, this)), d && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !b) return; d ? this.$backdrop.one(a.support.transition.end, b).emulateTransitionEnd(150) : b() } else !this.isShown && this.$backdrop ? (this.$backdrop.removeClass("in"), a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(a.support.transition.end, b).emulateTransitionEnd(150) : b()) : b && b() }; var c = a.fn.modal; a.fn.modal = function(c, d) { return this.each(function() { var e = a(this), f = e.data("bs.modal"), g = a.extend({}, b.DEFAULTS, e.data(), "object" == typeof c && c); f || e.data("bs.modal", f = new b(this, g)), "string" == typeof c ? f[c](d) : g.show && f.show(d) }) }, a.fn.modal.Constructor = b, a.fn.modal.noConflict = function() { return a.fn.modal = c, this }, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(b) { var c = a(this), d = c.attr("href"), e = a(c.attr("data-target") || d && d.replace(/.*(?=#[^\s]+$)/, "")), f = e.data("modal") ? "toggle" : a.extend({ remote: !/#/.test(d) && d }, e.data(), c.data()); b.preventDefault(), e.modal(f, this).one("hide", function() { c.is(":visible") && c.focus() }) }), a(document).on("show.bs.modal", ".modal", function() { a(document.body).addClass("modal-open") }).on("hidden.bs.modal", ".modal", function() { a(document.body).removeClass("modal-open") }) } (window.jQuery), +function(a) { "use strict"; var b = function(a, b) { this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null, this.init("tooltip", a, b) }; b.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1 }, b.prototype.init = function(b, c, d) { this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d); for (var e = this.options.trigger.split(" "), f = e.length; f--; ) { var g = e[f]; if ("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this)); else if ("manual" != g) { var h = "hover" == g ? "mouseenter" : "focus", i = "hover" == g ? "mouseleave" : "blur"; this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this)) } } this.options.selector ? this._options = a.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }, b.prototype.getDefaults = function() { return b.DEFAULTS }, b.prototype.getOptions = function(b) { return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && "number" == typeof b.delay && (b.delay = { show: b.delay, hide: b.delay }), b }, b.prototype.getDelegateOptions = function() { var b = {}, c = this.getDefaults(); return this._options && a.each(this._options, function(a, d) { c[a] != d && (b[a] = d) }), b }, b.prototype.enter = function(b) { var c = b instanceof this.constructor ? b : a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type); return clearTimeout(c.timeout), c.hoverState = "in", c.options.delay && c.options.delay.show ? (c.timeout = setTimeout(function() { "in" == c.hoverState && c.show() }, c.options.delay.show), void 0) : c.show() }, b.prototype.leave = function(b) { var c = b instanceof this.constructor ? b : a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type); return clearTimeout(c.timeout), c.hoverState = "out", c.options.delay && c.options.delay.hide ? (c.timeout = setTimeout(function() { "out" == c.hoverState && c.hide() }, c.options.delay.hide), void 0) : c.hide() }, b.prototype.show = function() { var b = a.Event("show.bs." + this.type); if (this.hasContent() && this.enabled) { if (this.$element.trigger(b), b.isDefaultPrevented()) return; var c = this.tip(); this.setContent(), this.options.animation && c.addClass("fade"); var d = "function" == typeof this.options.placement ? this.options.placement.call(this, c[0], this.$element[0]) : this.options.placement, e = /\s?auto?\s?/i, f = e.test(d); f && (d = d.replace(e, "") || "top"), c.detach().css({ top: 0, left: 0, display: "block" }).addClass(d), this.options.container ? c.appendTo(this.options.container) : c.insertAfter(this.$element); var g = this.getPosition(), h = c[0].offsetWidth, i = c[0].offsetHeight; if (f) { var j = this.$element.parent(), k = d, l = document.documentElement.scrollTop || document.body.scrollTop, m = "body" == this.options.container ? window.innerWidth : j.outerWidth(), n = "body" == this.options.container ? window.innerHeight : j.outerHeight(), o = "body" == this.options.container ? 0 : j.offset().left; d = "bottom" == d && g.top + g.height + i - l > n ? "top" : "top" == d && g.top - l - i < 0 ? "bottom" : "right" == d && g.right + h > m ? "left" : "left" == d && g.left - h < o ? "right" : d, c.removeClass(k).addClass(d) } var p = this.getCalculatedOffset(d, g, h, i); this.applyPlacement(p, d), this.$element.trigger("shown.bs." + this.type) } }, b.prototype.applyPlacement = function(a, b) { var c, d = this.tip(), e = d[0].offsetWidth, f = d[0].offsetHeight, g = parseInt(d.css("margin-top"), 10), h = parseInt(d.css("margin-left"), 10); isNaN(g) && (g = 0), isNaN(h) && (h = 0), a.top = a.top + g, a.left = a.left + h, d.offset(a).addClass("in"); var i = d[0].offsetWidth, j = d[0].offsetHeight; if ("top" == b && j != f && (c = !0, a.top = a.top + f - j), /bottom|top/.test(b)) { var k = 0; a.left < 0 && (k = -2 * a.left, a.left = 0, d.offset(a), i = d[0].offsetWidth, j = d[0].offsetHeight), this.replaceArrow(k - e + i, i, "left") } else this.replaceArrow(j - f, j, "top"); c && d.offset(a) }, b.prototype.replaceArrow = function(a, b, c) { this.arrow().css(c, a ? 50 * (1 - a / b) + "%" : "") }, b.prototype.setContent = function() { var a = this.tip(), b = this.getTitle(); a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right") }, b.prototype.hide = function() { function b() { "in" != c.hoverState && d.detach() } var c = this, d = this.tip(), e = a.Event("hide.bs." + this.type); return this.$element.trigger(e), e.isDefaultPrevented() ? void 0 : (d.removeClass("in"), a.support.transition && this.$tip.hasClass("fade") ? d.one(a.support.transition.end, b).emulateTransitionEnd(150) : b(), this.$element.trigger("hidden.bs." + this.type), this) }, b.prototype.fixTitle = function() { var a = this.$element; (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "") }, b.prototype.hasContent = function() { return this.getTitle() }, b.prototype.getPosition = function() { var b = this.$element[0]; return a.extend({}, "function" == typeof b.getBoundingClientRect ? b.getBoundingClientRect() : { width: b.offsetWidth, height: b.offsetHeight }, this.$element.offset()) }, b.prototype.getCalculatedOffset = function(a, b, c, d) { return "bottom" == a ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2} : "top" == a ? { top: b.top - d, left: b.left + b.width / 2 - c / 2} : "left" == a ? { top: b.top + b.height / 2 - d / 2, left: b.left - c} : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width} }, b.prototype.getTitle = function() { var a, b = this.$element, c = this.options; return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title) }, b.prototype.tip = function() { return this.$tip = this.$tip || a(this.options.template) }, b.prototype.arrow = function() { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }, b.prototype.validate = function() { this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null) }, b.prototype.enable = function() { this.enabled = !0 }, b.prototype.disable = function() { this.enabled = !1 }, b.prototype.toggleEnabled = function() { this.enabled = !this.enabled }, b.prototype.toggle = function(b) { var c = b ? a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type) : this; c.tip().hasClass("in") ? c.leave(c) : c.enter(c) }, b.prototype.destroy = function() { this.hide().$element.off("." + this.type).removeData("bs." + this.type) }; var c = a.fn.tooltip; a.fn.tooltip = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.tooltip"), f = "object" == typeof c && c; e || d.data("bs.tooltip", e = new b(this, f)), "string" == typeof c && e[c]() }) }, a.fn.tooltip.Constructor = b, a.fn.tooltip.noConflict = function() { return a.fn.tooltip = c, this } } (window.jQuery), +function(a) { "use strict"; var b = function(a, b) { this.init("popover", a, b) }; if (!a.fn.tooltip) throw new Error("Popover requires tooltip.js"); b.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, { placement: "right", trigger: "click", content: "", template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' }), b.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), b.prototype.constructor = b, b.prototype.getDefaults = function() { return b.DEFAULTS }, b.prototype.setContent = function() { var a = this.tip(), b = this.getTitle(), c = this.getContent(); a.find(".popover-title")[this.options.html ? "html" : "text"](b), a.find(".popover-content")[this.options.html ? "html" : "text"](c), a.removeClass("fade top bottom left right in"), a.find(".popover-title").html() || a.find(".popover-title").hide() }, b.prototype.hasContent = function() { return this.getTitle() || this.getContent() }, b.prototype.getContent = function() { var a = this.$element, b = this.options; return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content) }, b.prototype.arrow = function() { return this.$arrow = this.$arrow || this.tip().find(".arrow") }, b.prototype.tip = function() { return this.$tip || (this.$tip = a(this.options.template)), this.$tip }; var c = a.fn.popover; a.fn.popover = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.popover"), f = "object" == typeof c && c; e || d.data("bs.popover", e = new b(this, f)), "string" == typeof c && e[c]() }) }, a.fn.popover.Constructor = b, a.fn.popover.noConflict = function() { return a.fn.popover = c, this } } (window.jQuery), +function(a) { "use strict"; function b(c, d) { var e, f = a.proxy(this.process, this); this.$element = a(c).is("body") ? a(window) : a(c), this.$body = a("body"), this.$scrollElement = this.$element.on("scroll.bs.scroll-spy.data-api", f), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || (e = a(c).attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "") || "") + " .nav li > a", this.offsets = a([]), this.targets = a([]), this.activeTarget = null, this.refresh(), this.process() } b.DEFAULTS = { offset: 10 }, b.prototype.refresh = function() { var b = this.$element[0] == window ? "offset" : "position"; this.offsets = a([]), this.targets = a([]); var c = this; this.$body.find(this.selector).map(function() { var d = a(this), e = d.data("target") || d.attr("href"), f = /^#\w/.test(e) && a(e); return f && f.length && [[f[b]().top + (!a.isWindow(c.$scrollElement.get(0)) && c.$scrollElement.scrollTop()), e]] || null }).sort(function(a, b) { return a[0] - b[0] }).each(function() { c.offsets.push(this[0]), c.targets.push(this[1]) }) }, b.prototype.process = function() { var a, b = this.$scrollElement.scrollTop() + this.options.offset, c = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight, d = c - this.$scrollElement.height(), e = this.offsets, f = this.targets, g = this.activeTarget; if (b >= d) return g != (a = f.last()[0]) && this.activate(a); for (a = e.length; a--; ) g != f[a] && b >= e[a] && (!e[a + 1] || b <= e[a + 1]) && this.activate(f[a]) }, b.prototype.activate = function(b) { this.activeTarget = b, a(this.selector).parents(".active").removeClass("active"); var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]', d = a(c).parents("li").addClass("active"); d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), d.trigger("activate") }; var c = a.fn.scrollspy; a.fn.scrollspy = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.scrollspy"), f = "object" == typeof c && c; e || d.data("bs.scrollspy", e = new b(this, f)), "string" == typeof c && e[c]() }) }, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function() { return a.fn.scrollspy = c, this }, a(window).on("load", function() { a('[data-spy="scroll"]').each(function() { var b = a(this); b.scrollspy(b.data()) }) }) } (window.jQuery), +function(a) { "use strict"; var b = function(b) { this.element = a(b) }; b.prototype.show = function() { var b = this.element, c = b.closest("ul:not(.dropdown-menu)"), d = b.attr("data-target"); if (d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) { var e = c.find(".active:last a")[0], f = a.Event("show.bs.tab", { relatedTarget: e }); if (b.trigger(f), !f.isDefaultPrevented()) { var g = a(d); this.activate(b.parent("li"), c), this.activate(g, g.parent(), function() { b.trigger({ type: "shown.bs.tab", relatedTarget: e }) }) } } }, b.prototype.activate = function(b, c, d) { function e() { f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"), b.addClass("active"), g ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"), b.parent(".dropdown-menu") && b.closest("li.dropdown").addClass("active"), d && d() } var f = c.find("> .active"), g = d && a.support.transition && f.hasClass("fade"); g ? f.one(a.support.transition.end, e).emulateTransitionEnd(150) : e(), f.removeClass("in") }; var c = a.fn.tab; a.fn.tab = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.tab"); e || d.data("bs.tab", e = new b(this)), "string" == typeof c && e[c]() }) }, a.fn.tab.Constructor = b, a.fn.tab.noConflict = function() { return a.fn.tab = c, this }, a(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function(b) { b.preventDefault(), a(this).tab("show") }) } (window.jQuery), +function(a) { "use strict"; var b = function(c, d) { this.options = a.extend({}, b.DEFAULTS, d), this.$window = a(window).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(c), this.affixed = this.unpin = null, this.checkPosition() }; b.RESET = "affix affix-top affix-bottom", b.DEFAULTS = { offset: 0 }, b.prototype.checkPositionWithEventLoop = function() { setTimeout(a.proxy(this.checkPosition, this), 1) }, b.prototype.checkPosition = function() { if (this.$element.is(":visible")) { var c = a(document).height(), d = this.$window.scrollTop(), e = this.$element.offset(), f = this.options.offset, g = f.top, h = f.bottom; "object" != typeof f && (h = g = f), "function" == typeof g && (g = f.top()), "function" == typeof h && (h = f.bottom()); var i = null != this.unpin && d + this.unpin <= e.top ? !1 : null != h && e.top + this.$element.height() >= c - h ? "bottom" : null != g && g >= d ? "top" : !1; this.affixed !== i && (this.unpin && this.$element.css("top", ""), this.affixed = i, this.unpin = "bottom" == i ? e.top - d : null, this.$element.removeClass(b.RESET).addClass("affix" + (i ? "-" + i : "")), "bottom" == i && this.$element.offset({ top: document.body.offsetHeight - h - this.$element.height() })) } }; var c = a.fn.affix; a.fn.affix = function(c) { return this.each(function() { var d = a(this), e = d.data("bs.affix"), f = "object" == typeof c && c; e || d.data("bs.affix", e = new b(this, f)), "string" == typeof c && e[c]() }) }, a.fn.affix.Constructor = b, a.fn.affix.noConflict = function() { return a.fn.affix = c, this }, a(window).on("load", function() { a('[data-spy="affix"]').each(function() { var b = a(this), c = b.data(); c.offset = c.offset || {}, c.offsetBottom && (c.offset.bottom = c.offsetBottom), c.offsetTop && (c.offset.top = c.offsetTop), b.affix(c) }) }) } (window.jQuery);

//===============================

//js/bootstrap-dialog.js
var BootstrapDialog = null; !function($) { "use strict"; BootstrapDialog = function(options) { this.defaultOptions = { id: BootstrapDialog.newGuid(), type: BootstrapDialog.TYPE_PRIMARY, size: BootstrapDialog.SIZE_NORMAL, title: null, message: null, buttons: [], closable: true, spinicon: BootstrapDialog.ICON_SPINNER, data: {}, onshow: null, onshown: null, onhidden: null, onhide: null, autodestroy: true, width: null, height: null, backdrop: 'static', alwaysShowCloseBtn: false }; this.indexedButtons = {}; this.realized = false; this.opened = false; this.initOptions(options); this.holdThisInstance() }; BootstrapDialog.NAMESPACE = 'bootstrap-dialog'; BootstrapDialog.TYPE_DEFAULT = 'type-default'; BootstrapDialog.TYPE_INFO = 'type-info'; BootstrapDialog.TYPE_PRIMARY = 'type-primary'; BootstrapDialog.TYPE_SUCCESS = 'type-success'; BootstrapDialog.TYPE_WARNING = 'type-warning'; BootstrapDialog.TYPE_DANGER = 'type-danger'; BootstrapDialog.DEFAULT_TEXTS = {}; BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DEFAULT] = ''; BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_INFO] = ''; BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_PRIMARY] = ''; BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_SUCCESS] = 'Success'; BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_WARNING] = 'Warning'; BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DANGER] = 'Danger'; BootstrapDialog.SIZE_NORMAL = 'size-normal'; BootstrapDialog.SIZE_LARGE = 'size-large'; BootstrapDialog.BUTTON_SIZES = {}; BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_NORMAL] = ''; BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_LARGE] = 'btn-lg'; BootstrapDialog.ICON_SPINNER = 'glyphicon glyphicon-asterisk'; BootstrapDialog.dialogs = {}; BootstrapDialog.openAll = function() { $.each(BootstrapDialog.dialogs, function(id, dialogInstance) { dialogInstance.open() }) }; BootstrapDialog.closeAll = function() { $.each(BootstrapDialog.dialogs, function(id, dialogInstance) { dialogInstance.close() }) }; BootstrapDialog.prototype = { constructor: BootstrapDialog, initOptions: function(options) { this.options = $.extend(true, this.defaultOptions, options); return this }, holdThisInstance: function() { BootstrapDialog.dialogs[this.getId()] = this; return this }, initModalStuff: function() { this.setModal(this.createModal()).setModalDialog(this.createModalDialog()).setModalContent(this.createModalContent()).setModalHeader(this.createModalHeader()).setModalBody(this.createModalBody()).setModalFooter(this.createModalFooter()); this.getModal().append(this.getModalDialog()); this.getModalDialog().append(this.getModalContent()); this.getModalContent().append(this.getModalHeader()).append(this.getModalBody()).append(this.getModalFooter()); return this }, createModal: function() { return $('<div class="modal fade" tabindex="-1" id="' + this.getId() + '"></div>') }, getModal: function() { return this.$modal }, setModal: function($modal) { this.$modal = $modal; return this }, createModalDialog: function() { var $div = $('<div class="modal-dialog"></div>'); var optw = this.getWidth(); if (optw > 300) { $div.css('width', optw) }; return $div }, getModalDialog: function() { return this.$modalDialog }, setModalDialog: function($modalDialog) { this.$modalDialog = $modalDialog; return this }, createModalContent: function() { return $('<div class="modal-content"></div>') }, getModalContent: function() { return this.$modalContent }, setModalContent: function($modalContent) { this.$modalContent = $modalContent; return this }, createModalHeader: function() { return $('<div class="modal-header"></div>') }, getModalHeader: function() { return this.$modalHeader }, setModalHeader: function($modalHeader) { this.$modalHeader = $modalHeader; return this }, createModalBody: function() { var $div = $('<div class="modal-body"></div>'); var opth = this.getHeight(); if (opth > 200) { $div.css('height', opth) }; return $div }, getModalBody: function() { return this.$modalBody }, setModalBody: function($modalBody) { this.$modalBody = $modalBody; return this }, createModalFooter: function() { return $('<div class="modal-footer"></div>') }, getModalFooter: function() { return this.$modaFooter }, setModalFooter: function($modaFooter) { this.$modaFooter = $modaFooter; return this }, createDynamicContent: function(rawContent) { var content = null; if (typeof rawContent === 'function') { content = rawContent.call(rawContent, this) } else { content = rawContent }; if (typeof content === 'string') { content = this.formatStringContent(content) }; return content }, formatStringContent: function(content) { return content; }, setData: function(key, value) { this.options.data[key] = value; return this }, getData: function(key) { return this.options.data[key] }, setId: function(id) { this.options.id = id; return this }, getId: function() { return this.options.id }, getType: function() { return this.options.type }, setType: function(type) { this.options.type = type; return this }, getBackdrop: function() { return this.options.backdrop }, getWidth: function() { return this.options.width }, getHeight: function() { return this.options.height }, getSize: function() { return this.options.size }, setSize: function(size) { this.options.size = size; return this }, getTitle: function() { return this.options.title }, setTitle: function(title) { this.options.title = title; return this }, getMessage: function() { return this.options.message }, setMessage: function(message) { this.options.message = message; return this }, isClosable: function() { return this.options.closable }, isAlwaysShowCloseBtn: function() { return this.options.alwaysShowCloseBtn; }, setClosable: function(closable) { this.options.closable = closable; this.updateClosable(); return this }, getSpinicon: function() { return this.options.spinicon }, setSpinicon: function(spinicon) { this.options.spinicon = spinicon; return this }, addButton: function(button) { this.options.buttons.push(button); return this }, addButtons: function(buttons) { var that = this; $.each(buttons, function(index, button) { that.addButton(button) }); return this }, getButtons: function() { return this.options.buttons }, setButtons: function(buttons) { this.options.buttons = buttons; return this }, getButton: function(id) { if (typeof this.indexedButtons[id] !== 'undefined') { return this.indexedButtons[id] }; return null }, getButtonSize: function() { if (typeof BootstrapDialog.BUTTON_SIZES[this.getSize()] !== 'undefined') { return BootstrapDialog.BUTTON_SIZES[this.getSize()] }; return '' }, isAutodestroy: function() { return this.options.autodestroy }, setAutodestroy: function(autodestroy) { this.options.autodestroy = autodestroy }, getDefaultText: function() { return BootstrapDialog.DEFAULT_TEXTS[this.getType()] }, getNamespace: function(name) { return BootstrapDialog.NAMESPACE + '-' + name }, createHeaderContent: function() { var $container = $('<div></div>'); $container.addClass(this.getNamespace('header')); $container.append(this.createTitleContent()); $container.append(this.createCloseButton()); return $container }, createTitleContent: function() { var $title = $('<div></div>'); $title.addClass(this.getNamespace('title')); $title.append(this.getTitle() !== null ? this.createDynamicContent(this.getTitle()) : this.getDefaultText()); return $title }, createCloseButton: function() { var $container = $('<div></div>'); $container.addClass(this.getNamespace('close-button')); var $icon = $('<button class="close">×</button>'); $container.append($icon); $container.on('click', { dialog: this }, function(event) { event.data.dialog.close() }); return $container }, createBodyContent: function() { var $container = $('<div></div>'); $container.addClass(this.getNamespace('body')); $container.append(this.createMessageContent()); return $container }, createMessageContent: function() { var $message = $('<div></div>'); $message.addClass(this.getNamespace('message')); $message.append(this.createDynamicContent(this.getMessage())); return $message }, createFooterContent: function() { var $container = $('<div></div>'); $container.addClass(this.getNamespace('footer')); $container.append(this.createFooterButtons()); return $container }, createFooterButtons: function() { var that = this; var $container = $('<div></div>'); $container.addClass(this.getNamespace('footer-buttons')); this.indexedButtons = {}; $.each(this.options.buttons, function(index, button) { var $button = that.createButton(button); if (typeof button.id !== 'undefined') { that.indexedButtons[button.id] = $button }; $container.append($button) }); return $container }, createButton: function(button) { var $button = $('<button class="btn"></button>'); $button.addClass(this.getButtonSize()); if (typeof button.icon !== undefined && $.trim(button.icon) !== '') { $button.append(this.createButtonIcon(button.icon)) }; if (typeof button.label !== undefined) { $button.append(button.label) }; if (typeof button.cssClass !== undefined && $.trim(button.cssClass) !== '') { $button.addClass(button.cssClass) } else { $button.addClass('btn-default') }; $button.on('click', { dialog: this, button: button }, function(event) { var dialog = event.data.dialog; var button = event.data.button; if (typeof button.action === 'function') { button.action.call(this, dialog) }; if (button.autospin) { var $button = $(this); $button.find('.' + dialog.getNamespace('button-icon')).remove(); $button.prepend(dialog.createButtonIcon(dialog.getSpinicon()).addClass('icon-spin')) } }); return $button }, createButtonIcon: function(icon) { var $icon = $('<span></span>'); $icon.addClass(this.getNamespace('button-icon')).addClass(icon); return $icon }, enableButtons: function(enable) { var $buttons = this.getModalFooter().find('.btn'); $buttons.prop("disabled", !enable).toggleClass('disabled', !enable); return this }, updateClosable: function() { if (this.isRealized()) { var $theBigMask = this.getModal(); $theBigMask.off('click').on('click', { dialog: this }, function(event) { event.target === this && event.data.dialog.isClosable() && event.data.dialog.close() }); this.getModalHeader().find('.' + this.getNamespace('close-button')).toggle(this.isClosable() || this.isAlwaysShowCloseBtn()); $theBigMask.off('keyup').on('keyup', { dialog: this }, function(event) { event.which === 27 && event.data.dialog.isClosable() && event.data.dialog.close() }) }; return this }, onShow: function(onshow) { this.options.onshow = onshow; return this }, onShown: function(onshown) { this.options.onshown = onshown; return this }, onHide: function(onhide) { this.options.onhide = onhide; return this }, onHidden: function(onhidden) { this.options.onhidden = onhidden; return this }, isRealized: function() { return this.realized }, setRealized: function(realized) { this.realized = realized; return this }, isOpened: function() { return this.opened }, setOpened: function(opened) { this.opened = opened; return this }, handleModalEvents: function() { this.getModal().on('show.bs.modal', { dialog: this }, function(event) { var dialog = event.data.dialog; typeof dialog.options.onshow === 'function' && dialog.options.onshow(dialog); dialog.showPageScrollBar(true) }); this.getModal().on('shown.bs.modal', { dialog: this }, function(event) { var dialog = event.data.dialog; typeof dialog.options.onshown === 'function' && dialog.options.onshown(dialog) }); this.getModal().on('hide.bs.modal', { dialog: this }, function(event) { var dialog = event.data.dialog; typeof dialog.options.onhide === 'function' && dialog.options.onhide(dialog) }); this.getModal().on('hidden.bs.modal', { dialog: this }, function(event) { var dialog = event.data.dialog; typeof dialog.options.onhidden === 'function' && dialog.options.onhidden(dialog); dialog.isAutodestroy() && $(this).remove(); dialog.showPageScrollBar(false) }); return this }, showPageScrollBar: function(show) { $(document.body).toggleClass('modal-open', show) }, realize: function() { this.initModalStuff(); this.getModal().addClass(BootstrapDialog.NAMESPACE).addClass(this.getType()).addClass(this.getSize()); this.getModalHeader().append(this.createHeaderContent()); this.getModalBody().append(this.createBodyContent()); this.getModalFooter().append(this.createFooterContent()); this.getModal().modal({ backdrop: this.getBackdrop(), keyboard: false, show: false }); this.handleModalEvents(); this.setRealized(true); return this }, open: function() { !this.isRealized() && this.realize(); this.updateClosable(); this.getModal().modal('show'); this.setOpened(true); return this }, close: function() { this.getModal().modal('hide'); if (this.isAutodestroy()) { delete BootstrapDialog.dialogs[this.getId()] }; this.setOpened(false); return this } }; BootstrapDialog.newGuid = function() { return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8); return v.toString(16) }) }; BootstrapDialog.show = function(options) { new BootstrapDialog(options).open() }; BootstrapDialog.alert = function(message, callback, options) { new BootstrapDialog(jQuery.extend({}, { message: message, data: { 'callback': callback }, closable: false, buttons: [{ label: '确认', action: function(dialog) { typeof dialog.getData('callback') === 'function' && dialog.getData('callback')(true); dialog.close() } }] }, options)).open() }; BootstrapDialog.confirm = function(message, callback, options) { new BootstrapDialog(jQuery.extend({}, { title: 'Confirmation', message: message, closable: false, data: { 'callback': callback }, buttons: [{ label: '取消', action: function(dialog) { typeof dialog.getData('callback') === 'function' && dialog.getData('callback')(false); dialog.close() } }, { label: '确认', cssClass: 'btn-primary', action: function(dialog) { typeof dialog.getData('callback') === 'function' && dialog.getData('callback')(true); dialog.close() } }] }, options)).open() } } (window.jQuery);

//===================

//js/bootstrap/ext/zi/zmodal.js
/* ========================================================================
* Modify by z 20131007
*
* Bootstrap: modal.js v3.0.0
* http://twbs.github.com/bootstrap/javascript.html#modals
* ========================================================================
* Copyright 2012 Twitter, Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* ======================================================================== */


+function($) {
    "use strict";

    // MODAL CLASS DEFINITION
    // ======================

    var Modal = function(element, options) {
        this.options = options
        this.$element = $(element)
        this.$backdrop =
    this.isShown = null

        if (this.options.remote) this.$element.load(this.options.remote)
    }

    Modal.DEFAULTS = {
        backdrop: true
    , keyboard: true
    , show: true
    }

    Modal.prototype.toggle = function(_relatedTarget) {
        return this[!this.isShown ? 'show' : 'hide'](_relatedTarget)
    }

    Modal.prototype.show = function(_relatedTarget) {
        var that = this
        var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

        this.$element.trigger(e)

        if (/*this.isShown || */ //command by z
          e.isDefaultPrevented()) return

        this.isShown = true

        this.escape()

        this.$element.on('click.dismiss.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

        this.backdrop(function() {
            var transition = $.support.transition && that.$element.hasClass('fade')

            if (!that.$element.parent().length) {
                that.$element.appendTo(document.body) // don't move modals dom position
            }


            that.$element.show()

            if (transition) {
                that.$element[0].offsetWidth // force reflow
            }

            that.$element
        .addClass('in')
        .attr('aria-hidden', false)

            that.enforceFocus()

            var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

            transition ?
        that.$element.find('.modal-dialog') // wait for modal to slide in
          .one($.support.transition.end, function() {
              that.$element.focus().trigger(e)
          })
          .emulateTransitionEnd(300) :
        that.$element.focus().trigger(e)
        })
    }

    Modal.prototype.hide = function(e) {
        if (e) {
            e.preventDefault();
            e.stopImmediatePropagation(); //Add by z . It's important!
        }

        e = $.Event('hide.bs.modal')

        this.$element.trigger(e)

        if (!this.isShown || e.isDefaultPrevented()) return

        this.isShown = false

        this.escape()

        $(document).off('focusin.bs.modal')

        this.$element
      .removeClass('in')
      .attr('aria-hidden', true)
      .off('click.dismiss.modal')

        $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one($.support.transition.end, $.proxy(this.hideModal, this))
        .emulateTransitionEnd(300) :
      this.hideModal()
    }

    Modal.prototype.enforceFocus = function() {
        $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function(e) {
          if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
              this.$element.focus()
          }
      }, this))
    }

    Modal.prototype.escape = function() {
        if (this.isShown && this.options.keyboard) {
            this.$element.on('keyup.dismiss.bs.modal', $.proxy(function(e) {
                e.which == 27 && this.hide()
            }, this))
        } else if (!this.isShown) {
            this.$element.off('keyup.dismiss.bs.modal')
        }
    }

    Modal.prototype.hideModal = function() {
        var that = this
        this.$element.hide()
        this.backdrop(function() {
            that.removeBackdrop()
            that.$element.trigger('hidden.bs.modal')
        })
    }

    Modal.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove()
        this.$backdrop = null
    }

    Modal.prototype.backdrop = function(callback) {
        var that = this
        var animate = this.$element.hasClass('fade') ? 'fade' : ''

        if (this.isShown && this.options.backdrop) {
            var doAnimate = $.support.transition && animate

            //modify by z
            if (this.$element[0].modal_backdrop && $(document.body).find(this.$element[0].modal_backdrop[0]).length) {
                this.$backdrop = $(this.$element[0].modal_backdrop);
            } else {
                this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
                .appendTo(document.body);
                this.$element[0].modal_backdrop = this.$backdrop;
            }

            //add by z
            that.$element.css('z-index', ++$.fn.modal.base_ele_z);
            $(this.$backdrop).css('z-index', $.fn.modal.base_ele_z - 1);

            this.$element.on('click.dismiss.modal', $.proxy(function(e) {
                if (e.target !== e.currentTarget) return
                this.options.backdrop == 'static'
          ? this.$element[0].focus.call(this.$element[0])
          : false/*this.hide.call(this) modify by z*/
            }, this))

            if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

            this.$backdrop.addClass('in')

            if (!callback) return

            doAnimate ?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass('in')

            $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

        } else if (callback) {
            callback()
        }
    }


    // MODAL PLUGIN DEFINITION
    // =======================

    var old = $.fn.modal

    $.fn.modal = function(option, _relatedTarget) {
        return this.each(function() {
            var $this = $(this)
            var data = $this.data('bs.modal')
            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

            //if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
            if (options.nocache || !data) $this.data('bs.modal', (data = new Modal(this, options)));
            /* modify by z end */
            if (typeof option == 'string') data[option](_relatedTarget)
            else if (options.show) data.show(_relatedTarget)
        })
    }

    $.fn.modal.Constructor = Modal;

    // MODAL NO CONFLICT
    // =================

    $.fn.modal.noConflict = function() {
        $.fn.modal = old
        return this
    }


    // MODAL DATA-API
    // ==============

    $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function(e) {
        var $this = $(this)
        var href = $this.attr('href')
        var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) //strip for ie7
        var option = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

        e.preventDefault()

        $target
      .modal(option, this)
      .one('hide', function() {
          $this.is(':visible') && $this.focus()
      })
    })

    $(document)
    .on('show.bs.modal', '.modal', function() { $(document.body).addClass('modal-open') })
    .on('hidden.bs.modal', '.modal', function() { $(document.body).removeClass('modal-open') })

} (window.jQuery);

// if(jQuery.fn.modal){
//     jQuery(function(){
//         var div = jQuery('<div class="modal-dialog"></div>').appendTo('body');
//         var z = div.css('z-index');
//         div.remove();
//         jQuery.fn.modal.base_ele_z = z||1050;
//     });
// }
/*
on page right-bottom, show a message
*/
; (function($, undefined) {
    "use strict";

    var pluginName = 'zmessage';

    $[pluginName] = function(message, type, options) {
        clearTimeout($[pluginName].timeout);
        options = options || {};
        var id = options.id || $[pluginName].options.id;
        var $selector = $('#' + id);
        if (!$selector.length) {
            var append_to = options.append_to || $[pluginName].options.append_to;
            $selector = $('<div />', { id: id }).appendTo(append_to);
        }
        $selector.html('<button type="button" class="close" data-dismiss="alert">Ã—</button>' + message);

        //type: success,info,warning,danger
        if (!type) type = 'success';
        $selector.removeClass().addClass('zmessage alert alert-block fade in alert-' + type)

        var delay = options.delay;
        if (!delay) delay = $[pluginName].options[type + '_delay'];
        if (!delay) delay = $[pluginName].options[delay];
        if (delay > 0) {
            $selector.fadeIn('fast', function() {
                $[pluginName].timeout = setTimeout(function() { $selector.fadeOut('fast'); }, delay);
            });
        } else {
            $selector.fadeIn('fast');
        }
    };

    $.extend($[pluginName], {
        options: {
            id: 'zmessage-container'
			, delay: -1 // set -1 to no auto-close
			, append_to: 'body'	// where should the modal be appended to (default to document.body). Added for unit tests, not really needed in real life.
            , success_delay: 3500
            , danger_delay: 10000
            , info_delay: 5000
            , warning_delay: 5000
        }
    });
})(jQuery);

/*
confirm dialog
*/
if (window.bootbox) {
    ; (function($, undefined) {
        "use strict";

        var pluginName = 'zconfirm';
        bootbox.setDefaults({ locale: 'zh_CN' });
        $[pluginName] = function(message, callback) {
            bootbox.confirm(message, callback);
        };

        $.extend($[pluginName], {
            options: {
        }
    });
})(jQuery);

/*
prompt dialog
*/
; (function($, undefined) {
    "use strict";

    var pluginName = 'zprompt';
    bootbox.setDefaults({ locale: 'zh_CN' });
    $[pluginName] = function(message, callback) {
        bootbox.prompt(message, callback);
    };

    $.extend($[pluginName], {
        options: {
    }
});
})(jQuery);

/*
alert dialog
*/
; (function($, undefined) {
    "use strict";

    var pluginName = 'zalert';
    bootbox.setDefaults({ locale: 'zh_CN' });
    $[pluginName] = function(message, callback) {
        bootbox.alert(message, callback);
    };

    $.extend($[pluginName], {
        options: {
    }
});
})(jQuery);

}
/*
ajax loader
*/
; (function($, undefined) {
    "use strict";

    var pluginName = 'zajaxloader';

    $[pluginName] = function(el, options) {
        var container = typeof (el) == 'string' ? $(el) : $(el);
        if (!container.length) return;

        container.find('.zajaxoverlay').remove();

        if (options == 'remove') {
            return;
        }

        options = jQuery.extend({}, $[pluginName].options, options);

        container.css('position', 'relative');

        var czindex = container.css('z-index') - 0;
        var overlay_zindex = isNaN(czindex) ? 1 : czindex + 1;

        // Create the overlay 
        var overlay = $('<div></div>').css({
            'background-color': options.bgColor,
            'opacity': options.opacity,
            'width': '100%',
            'height': container.height(),
            'position': 'absolute',
            'top': '0px',
            'left': '0px',
            'z-index': overlay_zindex
        }).addClass('zajaxoverlay');

        var gif_top = Math.floor(container.height() / 2) - 30;
        if (gif_top < 0) gif_top = 0;
        container.append(
			overlay.append(
				$('<div></div>').addClass('zajaxloader')
			).fadeIn(options.duration)
		);
    };

    $.extend($[pluginName], {
        options: {
            color: '#428BCA',
            bgColor: '#eee',
            duration: 200,
            opacity: 0.7,
            classOveride: 'fast'//false
        }
    });
})(jQuery);


/*
remote update element content
*/
; (function($, undefined) {
    "use strict";

    var pluginName = 'zremoteupdate';

    $[pluginName] = function(el, url) {
        var el = typeof (el) == 'string' ? $('#' + el) : $(el);
        if (!el.length) return;

        $.zajaxloader(el);

        $.get(url, function(content) {
            el.html(content);
            $.zajaxloader(el, 'remove');
        })
    };

    $.extend($[pluginName], {
        options: {
    }
});
})(jQuery);


/*

ajax remote modal dialog
  
*/
; (function($, undefined) {
    "use strict";

    var pluginName = 'zmodal';

    $[pluginName] = function(targetid, content, options) {
        options = options || {};
        options = jQuery.extend({}, $[pluginName].options, options);
        options.title = options.title || 'å¯¹è¯æ¡†';
        if (!document.getElementById(targetid)) {
            $(document.body).append('<div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" id="' + targetid + '"></div>');
            if (options.createwindow) {
                var footer = '';
                footer = '<div class="modal-footer" id="' + targetid + '_footer" ' +
                    (options.buttons && options.buttons.length ? '' : ' stle="display:none"') + '></div>';

                $("#" + targetid).append(
                    '<div class="modal-dialog" style="width:' + options.width + 'px">\
<div class="modal-content">\
<div class="modal-header" id="' + targetid + '_header">\
<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\
<h' + options.title_size + ' class="modal-title" id="' + targetid + '">' + options.title + '</h' + options.title_size + '>\
</div>\
<div class="modal-body" style="max-height:' + options.height + 'px;min-height:' + options.minheight + 'px;overflow-y:auto" id="' + targetid + '_content"></div>'
+ footer +
'</div><!-- /.modal-content -->\
</div><!-- /.modal-dialog -->');

                var btns = options.buttons;
                for (var i = 0; i < btns.length; ++i) {
                    var btn = btns[i];
                    if (btn.type == 'Cancel') {
                        footer += '<button type="button" class="btn btn-default" data-dismiss="modal">å–æ¶ˆ</button>';
                        continue;
                    }
                    var button = $('<button />').attr({
                        type: 'button',
                        id: btn.id
                    }).html(btn.text);
                    if (btn.classname) button.addClass(btn.classname);
                    if (btn.onclick) {
                        button.click(btn.onclick);
                    }
                    $('#' + targetid + '_footer').append(button);
                }
            }
        }

        if (content.substr(0, 1) == '#') {
            if ($(content).length = 1) {
                $('#' + targetid + '_content').append($(contet));
            }
        }

        if (content == 'hide' || content == 'show') {
            $("#" + targetid).modal(content);
            return;
        }

        var remote = options.remote === undefined ? $[pluginName].options.remote : options.remote;
        var nocache = options.nocache === undefined ? $[pluginName].options.nocache : options.nocache;
        if (remote) {
            if (options.createwindow) {
                var content_ele = $('#' + targetid + '_content');
                content_ele.html(options.remote_loading);
                $.ajax({
                    url: content,
                    data: options.remote_data,
                    type: options.remote_type,
                    success: function(content) {
                        content_ele.html(content);
                        if (typeof (options['remote_onload']) == 'function') {
                            (options['remote_onload'])();
                        }
                    }
                });
                $("#" + targetid).modal('show');
                return;
            }
            $("#" + targetid).modal({ remote: content, nocache: nocache });
        } else {

        }
    };

    $.extend($[pluginName], {
        options: {
            'remote': true,
            'nocache': true,
            'createwindow': true, //é»˜è®¤åœ¨å®¢æˆ·ç«¯åˆ›å»ºçª—ä½“ï¼Œå¦åˆ™ä»ŽæœåŠ¡å™¨ç«¯åˆ›å»º
            'remote_loading': 'Loading..',
            'remote_type': 'post',
            'remote_onload': null,
            'remote_data': {}, //ä»…åœ¨createwindowæ—¶ç”Ÿæ•ˆ
            'buttons': [],
            'width': 500,
            'height': 400,
            'title_size': 3, //h3
            'minheight': 50
        }
    });
})(jQuery);


//=====================================

//js/bootstrap/twitter-bootstrap-hover-dropdown.min.js
/*
* Project: Twitter Bootstrap Hover Dropdown
* Author: Cameron Spear
* Contributors: Mattia Larentis
*
* Dependencies: Twitter Bootstrap's Dropdown plugin, jQuery
*
* A simple plugin to enable twitter bootstrap dropdowns to active on hover and provide a nice user experience.
*
* License: MIT
*
* http://cameronspear.com/blog/twitter-bootstrap-dropdown-on-hover-plugin/
*/
(function(e, t, n) { var r = e(); e.fn.dropdownHover = function(n) { r = r.add(this.parent()); return this.each(function() { var i = e(this), s = i.parent(), o = { delay: 500, instantlyCloseOthers: !0 }, u = { delay: e(this).data("delay"), instantlyCloseOthers: e(this).data("close-others") }, a = e.extend(!0, {}, o, n, u), f; s.hover(function(e) { if (!s.hasClass("open") && !i.is(e.target)) return !0; a.instantlyCloseOthers === !0 && r.removeClass("open"); t.clearTimeout(f); s.addClass("open") }, function() { f = t.setTimeout(function() { s.removeClass("open") }, a.delay) }); i.hover(function() { a.instantlyCloseOthers === !0 && r.removeClass("open"); t.clearTimeout(f); s.addClass("open") }); s.find(".dropdown-submenu").each(function() { var n = e(this), r; n.hover(function() { t.clearTimeout(r); n.children(".dropdown-menu").show(); n.siblings().children(".dropdown-menu").hide() }, function() { var e = n.children(".dropdown-menu"); r = t.setTimeout(function() { e.hide() }, a.delay) }) }) }) }; e(document).ready(function() { e('[data-hover="dropdown"]').dropdownHover() }) })(jQuery, this);


//========================================


//js/common.js
//Jquery Easings
eval(function(p, a, c, k, e, r) { e = function(c) { return (c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36)) }; if (!''.replace(/^/, String)) { while (c--) r[e(c)] = k[c] || e(c); k = [function(e) { return r[e] } ]; e = function() { return '\\w+' }; c = 1 }; while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]); return p } ('h.i[\'1a\']=h.i[\'z\'];h.O(h.i,{y:\'D\',z:9(x,t,b,c,d){6 h.i[h.i.y](x,t,b,c,d)},17:9(x,t,b,c,d){6 c*(t/=d)*t+b},D:9(x,t,b,c,d){6-c*(t/=d)*(t-2)+b},13:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t+b;6-c/2*((--t)*(t-2)-1)+b},X:9(x,t,b,c,d){6 c*(t/=d)*t*t+b},U:9(x,t,b,c,d){6 c*((t=t/d-1)*t*t+1)+b},R:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t*t+b;6 c/2*((t-=2)*t*t+2)+b},N:9(x,t,b,c,d){6 c*(t/=d)*t*t*t+b},M:9(x,t,b,c,d){6-c*((t=t/d-1)*t*t*t-1)+b},L:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t*t*t+b;6-c/2*((t-=2)*t*t*t-2)+b},K:9(x,t,b,c,d){6 c*(t/=d)*t*t*t*t+b},J:9(x,t,b,c,d){6 c*((t=t/d-1)*t*t*t*t+1)+b},I:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t*t*t*t+b;6 c/2*((t-=2)*t*t*t*t+2)+b},G:9(x,t,b,c,d){6-c*8.C(t/d*(8.g/2))+c+b},15:9(x,t,b,c,d){6 c*8.n(t/d*(8.g/2))+b},12:9(x,t,b,c,d){6-c/2*(8.C(8.g*t/d)-1)+b},Z:9(x,t,b,c,d){6(t==0)?b:c*8.j(2,10*(t/d-1))+b},Y:9(x,t,b,c,d){6(t==d)?b+c:c*(-8.j(2,-10*t/d)+1)+b},W:9(x,t,b,c,d){e(t==0)6 b;e(t==d)6 b+c;e((t/=d/2)<1)6 c/2*8.j(2,10*(t-1))+b;6 c/2*(-8.j(2,-10*--t)+2)+b},V:9(x,t,b,c,d){6-c*(8.o(1-(t/=d)*t)-1)+b},S:9(x,t,b,c,d){6 c*8.o(1-(t=t/d-1)*t)+b},Q:9(x,t,b,c,d){e((t/=d/2)<1)6-c/2*(8.o(1-t*t)-1)+b;6 c/2*(8.o(1-(t-=2)*t)+1)+b},P:9(x,t,b,c,d){f s=1.l;f p=0;f a=c;e(t==0)6 b;e((t/=d)==1)6 b+c;e(!p)p=d*.3;e(a<8.w(c)){a=c;f s=p/4}m f s=p/(2*8.g)*8.r(c/a);6-(a*8.j(2,10*(t-=1))*8.n((t*d-s)*(2*8.g)/p))+b},H:9(x,t,b,c,d){f s=1.l;f p=0;f a=c;e(t==0)6 b;e((t/=d)==1)6 b+c;e(!p)p=d*.3;e(a<8.w(c)){a=c;f s=p/4}m f s=p/(2*8.g)*8.r(c/a);6 a*8.j(2,-10*t)*8.n((t*d-s)*(2*8.g)/p)+c+b},T:9(x,t,b,c,d){f s=1.l;f p=0;f a=c;e(t==0)6 b;e((t/=d/2)==2)6 b+c;e(!p)p=d*(.3*1.5);e(a<8.w(c)){a=c;f s=p/4}m f s=p/(2*8.g)*8.r(c/a);e(t<1)6-.5*(a*8.j(2,10*(t-=1))*8.n((t*d-s)*(2*8.g)/p))+b;6 a*8.j(2,-10*(t-=1))*8.n((t*d-s)*(2*8.g)/p)*.5+c+b},F:9(x,t,b,c,d,s){e(s==u)s=1.l;6 c*(t/=d)*t*((s+1)*t-s)+b},E:9(x,t,b,c,d,s){e(s==u)s=1.l;6 c*((t=t/d-1)*t*((s+1)*t+s)+1)+b},16:9(x,t,b,c,d,s){e(s==u)s=1.l;e((t/=d/2)<1)6 c/2*(t*t*(((s*=(1.B))+1)*t-s))+b;6 c/2*((t-=2)*t*(((s*=(1.B))+1)*t+s)+2)+b},A:9(x,t,b,c,d){6 c-h.i.v(x,d-t,0,c,d)+b},v:9(x,t,b,c,d){e((t/=d)<(1/2.k)){6 c*(7.q*t*t)+b}m e(t<(2/2.k)){6 c*(7.q*(t-=(1.5/2.k))*t+.k)+b}m e(t<(2.5/2.k)){6 c*(7.q*(t-=(2.14/2.k))*t+.11)+b}m{6 c*(7.q*(t-=(2.18/2.k))*t+.19)+b}},1b:9(x,t,b,c,d){e(t<d/2)6 h.i.A(x,t*2,0,c,d)*.5+b;6 h.i.v(x,t*2-d,0,c,d)*.5+c*.5+b}});', 62, 74, '||||||return||Math|function|||||if|var|PI|jQuery|easing|pow|75|70158|else|sin|sqrt||5625|asin|||undefined|easeOutBounce|abs||def|swing|easeInBounce|525|cos|easeOutQuad|easeOutBack|easeInBack|easeInSine|easeOutElastic|easeInOutQuint|easeOutQuint|easeInQuint|easeInOutQuart|easeOutQuart|easeInQuart|extend|easeInElastic|easeInOutCirc|easeInOutCubic|easeOutCirc|easeInOutElastic|easeOutCubic|easeInCirc|easeInOutExpo|easeInCubic|easeOutExpo|easeInExpo||9375|easeInOutSine|easeInOutQuad|25|easeOutSine|easeInOutBack|easeInQuad|625|984375|jswing|easeInOutBounce'.split('|'), 0, {}))


//========================

//js/megamenu/jquery.megamenu.js
/*jQuery MegaMenu Plugin
Author: Devadatta Sahoo
Author URI: http://www.geektantra.com */
var isIE6 = navigator.userAgent.toLowerCase().indexOf('msie 6') != -1;
(function($) {
    $.fn.extend({
        isChildOf: function(filter_string) {
            var parents = $(this).parents().get();
            for (j = 0; j < parents.length; j++) {
                if ($(parents[j]).is(filter_string))
                    return true;
            }
            return false;
        }
    });
})(jQuery);

jQuery.fn.megamenu = function(ContentClass, Options) {
    //var MenuClass = jQuery(this).attr("class").split(" ")[0];
    var MenuClass = Options['menuclass'];
    var ParentNodeNumber = 0;
    Options = jQuery.extend({
        width: "auto",
        justify: "left"
    }, Options);
    jQuery(ContentClass).after('<div id="MegaMenuContentShadow" style="display: none;"></div><div id="MegaMenuContent" style="display: none;" class="sub-menu"></div>');
    jQuery(this).hover(function() {
        //var MenuContent = jQuery(this).next(ContentClass).html();
        var submenuid = jQuery(this).attr('data-menu');
        var submenu = jQuery('#' + submenuid);
        var MenuContent = submenu.html();

        ParentNodeNumber = jQuery('.' + MenuClass).index(this);
        MegaMenuMouseOver(ParentNodeNumber, MenuContent, "click", MenuClass, ContentClass, Options);
        //setTimeout('MegaMenuMouseOver('+ParentNodeNumber+',"'+escape(MenuContent)+'","hover",\''+MenuClass+'\',\''+ContentClass+'\',\''+Options+'\')', 300);
    }, function() {
        MegaMenuMouseOut(ParentNodeNumber, MenuClass, ContentClass);
    });
    jQuery(this).click(function() {
        //var MenuContent = jQuery(this).next('.MegaMenuContent').html();
        var submenuid = jQuery(this).attr('data-menu');
        var submenu = jQuery('#' + submenuid);
        var MenuContent = submenu.html();

        ParentNodeNumber = jQuery('.' + MenuClass).index(this);
        MegaMenuMouseOver(ParentNodeNumber, MenuContent, "click", MenuClass, ContentClass, Options, submenu);
    });
    jQuery(document).bind('click', function(e) {
        var $clicked = jQuery(e.target);
        if ($clicked.isChildOf('#MegaMenuContent') || $clicked.is('#MegaMenuContent') || $clicked.is('.' + MenuClass)) {
        }
        else
            MegaMenuMouseOut(ParentNodeNumber, MenuClass, ContentClass);
    });
};

function MegaMenuMouseOver(ParentNodeNumber, MenuContent, state, MenuLinkClass, MenuContentClass, Options, submenutarget) {
    var MenuLinkClass = (typeof (MenuLinkClass) == 'undefined') ? ".MegaMenuLink" : MenuLinkClass;
    var MenuContentClass = (typeof (MenuContentClass) == 'undefined') ? ".MegaMenuContent" : MenuContentClass;

    //var Options = eval('(' + Options + ')');
    if (state == "hover")
        jQuery('.' + MenuLinkClass).removeClass(MenuLinkClass + 'Active');
    jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).addClass(MenuLinkClass + 'Active');

    var selfNode = new Array();
    selfNode['width'] = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).width();
    selfNode['padding-left'] = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css('padding-left').replace(/px/g, ''));
    selfNode['padding-right'] = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css('padding-right').replace(/px/g, ''));
    selfNode['border-left-width'] = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css('border-left-width').replace(/px/g, ''));
    selfNode['border-right-width'] = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css('border-right-width').replace(/px/g, ''));

    if (isIE6)
        selfNode['width'] = selfNode['width'] + 10;

    if (Options['justify'] == "left") {
        var LeftPos = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).parent().position().left;
        if (Options['width'] == 'auto')
            LeftPos = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).position().left - 10;
    }
    else if (Options['justify'] == "right") {
        var RightPos = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).parent().position().left;
        if (Options['width'] == 'auto')
            RightPos = jQuery(document).width() - 10 - jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).position().left - selfNode['width'] - selfNode['padding-left'] - selfNode['padding-right'] - selfNode['border-left-width'] - selfNode['border-right-width'];
    } else {
        if (Options['width'] == '100%') {
            var LeftPos = 0;
        }
    }


    //    var TopPos = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).height() + jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).position().top + parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css("padding-top").replace(/px/g, '')) + parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css("padding-bottom").replace(/px/g, '')) + parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css("border-top-width").replace(/px/g, ''));

    if (Options['top'] - 0 >= 0) {
        var TopPos = Options['top'] - 0;
    } else {
        var TopPos_A = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).height();
        var TopPos_B = jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).position().top;
        var TopPos_C = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css("padding-top").replace(/px/g, ''));
        var TopPos_D = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css("padding-bottom").replace(/px/g, ''));
        var TopPos_E = parseInt(jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).css("border-top-width").replace(/px/g, ''));
        var TopPos = (isNaN(TopPos_A) ? 0 : TopPos_A) +
            (isNaN(TopPos_B) ? 0 : TopPos_B) +
            (isNaN(TopPos_C) ? 0 : TopPos_C) +
            (isNaN(TopPos_D) ? 0 : TopPos_D) +
            (isNaN(TopPos_E) ? 0 : TopPos_E);
    }

    var scrollLeft = jQuery(document).scrollLeft();

    //根据子菜单宽度调整对齐位置
    var pindex = ParentNodeNumber;
    if (ParentNodeNumber == 2) pindex = 0;

    var left = jQuery(jQuery('.' + MenuLinkClass)[pindex]).find('h2').offset().left - scrollLeft;
    if (ParentNodeNumber == 3) {
        //left -= 170; //云主机
        // }else if(ParentNodeNumber==2){ //虚拟主机
        //     if(jq('.host_newold_toggle .nav_newold_toggle_new').hasClass('active')){
        //         //新版导航
        //         left += 20;
        //     }else{
        //         //left -= 20;
        //     }
    } else if (ParentNodeNumber == 7) {
        var submenuid = jQuery(jQuery('#J_Menu li')[ParentNodeNumber]).attr('data-menu');
        if (jQuery('#' + submenuid + ' dl').length > 1)
            left -= 612; //会员中心
    } else if (ParentNodeNumber == 5) { //服务器
        left -= 350;
    }

    jQuery("#MegaMenuContent").css('padding-left', left);

    MenuContent = unescape(MenuContent);

    if (LeftPos || LeftPos === 0) {
        jQuery("#MegaMenuContent").css('left', LeftPos + 'px');
        jQuery("#MegaMenuContentShadow").css('left', (LeftPos) + 'px');
    }
    else {
        jQuery("#MegaMenuContent").css('right', RightPos + 'px');
        jQuery("#MegaMenuContentShadow").css('right', (RightPos - 4) + 'px');
    }

    jQuery("#MegaMenuContent").css('top', TopPos + 'px');
    jQuery("#MegaMenuContentShadow").css('top', TopPos + 'px');
    if (Options['width']) {
        jQuery("#MegaMenuContent").css('width', Options['width']);
        jQuery("#MegaMenuContentShadow").css('width', Options['width']);
    }
    jQuery("#MegaMenuContent").html('' + MenuContent);

    //重设当前菜单版本
    var submenu = jQuery("#MegaMenuContent");
    var toggleBtn = submenu.find('.nav_newold_toggle');
    if (toggleBtn.length) {
        var activebtn = null;
        for (var i = 0; i < toggleBtn.length; ++i) {
            var btn = toggleBtn[i];
            if (jq(btn).hasClass('active')) {
                activebtn = btn;
                break;
            }
        }
        var activetype = jq(activebtn).attr('data-value');
        var type = activetype == 'new' ? 'old' : 'new';
        submenu.find('.' + activetype + 'm').show();
        submenu.find('.' + type + 'm').hide();
    }

    //jQuery("#MegaMenuContent").slideDown("fast");
    jQuery("#MegaMenuContent").slideDown(400);
    jQuery("#MegaMenuContentShadow").html('' + MenuContent);
    //jQuery("#MegaMenuContentShadow").slideDown("fast");
    //jQuery("#MegaMenuContentShadow").show();

    if (jQuery.fn._hover) {
        jQuery("#MegaMenuContent,#MegaMenuContentShadow")._hover(function() {
            MenuContentHoverIn(MenuLinkClass, ParentNodeNumber);
        }, function() {
            MenuContentHoverOut(MenuLinkClass, ParentNodeNumber);
        });
    } else {
        jQuery("#MegaMenuContent,#MegaMenuContentShadow").hover(function() {
            MenuContentHoverIn(MenuLinkClass, ParentNodeNumber);
        }, function() {
            MenuContentHoverOut(MenuLinkClass, ParentNodeNumber);
        });
    }
}

function MenuContentHoverIn(MenuLinkClass, ParentNodeNumber) {
    jQuery('#J_Menu li.hassub').removeClass('selected');
    jQuery(jQuery('#J_Menu li.hassub')[ParentNodeNumber]).addClass('selected');
    jQuery('#MegaMenuContent').show();
    //jQuery('#MegaMenuContentShadow').show();
    jQuery('.' + MenuLinkClass).removeClass(MenuLinkClass + 'Active');
    jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).addClass(MenuLinkClass + 'Active');
}

function MenuContentHoverOut(MenuLinkClass, ParentNodeNumber) {
    jQuery(jQuery('#J_Menu li.hassub')[ParentNodeNumber]).removeClass('selected');
    //jQuery("#MegaMenuContentShadow").hide()
    jQuery("#MegaMenuContent").hide()
    jQuery('.' + MenuLinkClass).removeClass(MenuLinkClass + 'Active');
}

function MegaMenuMouseOut(ParentNodeNumber, MenuLinkClass, MenuContentClass) {
    jQuery('#MegaMenuContent').hide();
    //jQuery('#MegaMenuContentShadow').hide();
    var MenuLinkClass = (typeof (MenuLinkClass) == 'undefined') ? ".MegaMenuLink" : MenuLinkClass;
    jQuery('.' + MenuLinkClass).eq(ParentNodeNumber).removeClass(MenuLinkClass + 'Active');
}


//========================

//js/topmenu.js
jq(function() {
    initHeader();
});

function getIEVersion() {
    var rv = -1;
    if (navigator.appName == 'Microsoft Internet Explorer') {
        var ua = navigator.userAgent;
        var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
        if (re.exec(ua) != null)
            rv = parseFloat(RegExp.$1);
    }
    else if (navigator.appName == 'Netscape') {
        var ua = navigator.userAgent;
        var re = new RegExp("Trident/.*rv:([0-9]{1,}[\.0-9]{0,})");  //for IE 11
        if (re.exec(ua) != null)
            rv = parseFloat(RegExp.$1);
    }
    return rv;
}

function initHeader() {
    var ie_v = getIEVersion();
    if (ie_v == 6 || ie_v == 7) {
        jQuery('#J_Menu li.hassub').hover(
            function() {
                var submenuid = jq(this).attr('data-menu');
                var submenu = jq('#' + submenuid);
                if (submenu.css('display') != 'block') {
                    this.over = false;

                    jq(this).addClass('selected');


                    //根据子菜单宽度调整对齐位置
                    var scrollLeft = jQuery(document).scrollLeft();
                    var ParentNodeNumber = submenuid.split('_')[2] - 1;
                    var pindex = ParentNodeNumber;
                    if (ParentNodeNumber == 2) pindex = 0;
                    var left = jQuery(jQuery('#J_Menu li.hassub')[pindex]).find('h2').offset().left - scrollLeft;
                    // if(ParentNodeNumber==3) left -= 170; //云主机
                    // else
                    if (ParentNodeNumber == 7) {
                        if (jQuery('#' + submenuid + ' dl').length > 1)
                            left -= 612; //会员中心
                    } else if (ParentNodeNumber == 5) { //服务器
                        left -= 350;
                    }

                    submenu.css('padding-left', left);

                    submenu.addClass('show').show();
                }
            },
            function() {
                var li = jq(this);
                setTimeout(function() {
                    if (!li[0].over) {
                        var submenuid = li.attr('data-menu');
                        var submenu = jq('#' + submenuid);
                        submenu.removeClass('show').hide();
                    }
                }, 190);
            }
        );

        jQuery('#J_subMenus div').hover(
            function() {
                var id = this.id;
                if (!id) return;
                var menuitem = jq('#J_Menu li[data-menu="' + id + '"]');
                menuitem[0].over = true;
            },
            function() {
                var id = this.id;
                if (!id) return;
                var menuitem = jq('#J_Menu li[data-menu="' + id + '"]');
                jq(this).removeClass('show').hide();
            }
        );
    } else {
        jq("#J_Menu li.hassub").megamenu("#J_subMenus div.sub-menu", {
            width: '100%',
            top: 0,
            justify: null,
            menuclass: 'hassub'
        });
    }

    jq("#J_Menu li").hover(
        function() {
            jq(this).addClass("selected");
        },
        function() {
            jq(this).removeClass("selected");
        }
    );

    jq('div.header').each(function() {
        var top = 10; //

        var element = jq(this);
        if (!(ie_v == 8 || ie_v == 7 || ie_v == 6)) {
            jq(window).scroll(function() {
                var scrolls = jq(this).scrollTop();
                if (scrolls >= top) {
                    element.addClass('small');
                } else {
                    element.removeClass('small');
                }
            });
        }

        element.find(".close-ico").click(function(event) {
            element.remove();
            event.preventDefault();
        })
    });

    //resetSubmenuPos();
}

function resetSubmenuPos() {
    return;
    jq('#J_Menu li.hassub').each(function() {
        var mitem = jq(this);
        var subid = mitem.attr('data-menu');
        var submenu = jq('#' + subid, ',[ref="' + subid + '"]');

        var left = mitem.offset().left;
        submenu.css('padding-left', left);
    });
}


//===============================



//js/sudu.js
/*
开发者：华夏名网
版权归华夏名网所有
20130109

dialog部分扩展自http://jschr.github.io/bootstrap-modal/
*/
var Sudu = null;
!function($) {
    "use strict";
    Sudu = function() {

    }

    //type: 弹出框类型，默认'warning'，可传递'success'
    Sudu.alert = function(msg, type, options) {
        var defopts = {
            'title': '系统提示',
            'type': 'type-warning'
        };
        var options = $.extend({}, defopts, options || {});
        if (type) options.type = type;
        var callback = typeof (options.callback) == 'function' ? options.callback : null;
        BootstrapDialog.alert(msg, callback, options);
    }

    Sudu.confirm = function(msg, callback, options) {
        var defopts = {
            'title': '系统提示',
            'type': 'type-default'
        };
        var options = $.extend({}, defopts, options || {});
        //var callback = typeof(options.callback)=='function'?options.callback:null;
        BootstrapDialog.confirm(msg, callback, options);
    }

    Sudu.prompt = function(msg, callback, options) {
        new BootstrapDialog(jQuery.extend({}, {
            title: 'Confirmation',
            message: '<p>' + msg + '</p><p><input type="text" /></p>',
            closable: false,
            buttons: [{
                label: '取消',
                action: function(dialog) {
                    dialog.close();
                }
            }, {
                label: '确定',
                cssClass: 'btn-primary',
                action: function(dialog) {
                    dialog.entry_value = dialog.getModalBody().find('input[type="text"]').val();
                    dialog.close();
                }
}],
                onhidden: function(dialog) {
                    typeof callback === 'function' && callback(dialog.entry_value);
                }
            }, options)).open();
        }

        /*
        dialog将返回一个BootstrapDialog对象。
  
  options: 除官网提供的参数外，另外增加的参数有：
        {
        onshown: 对话框渲染完成后执行的函数，接收一个参数，dialog对象本身
        onhidden: 对话框关闭之后执行
        footer: 是否显示对话框footer，传递为非false值时才显示
        url: 当请求远程内容时传递
        data: 远程请求时传递给服务器的参数，可以是query string也可以是一个对象
        iframe: bool，传递url时，如果设置iframe为true，则在对话框中包含一个iframe，而不是通过ajax获取远程内容
        ajax_error: ajax请求失败时执行的函数
        ele: 当需要把页面上的元素放进对话框时使用，可以是 元素id，也可以是这个元素对象本身。
        注意，在设置ele参数的同时，将自动设置show和autodestroy为false。所以调用Sudu.dialog()之后，对话框不会自动打开，需要手动调用open()函数打开。例：var dlg=Sudu.dialog({ele:'element_id',...});dlg.open();
        ele_insert_mode: 当传递ele参数时，这个选项决定插入对话框的元素是移动还是复制元素。默认'move',可传递'copy'。在使用copy时，注意被复制的元素及其子元素最好不要有"id"属性，不然一个页面内有多个相同id的元素可能导致不可预知的错误
        show: bool, 是否需要立即打开窗口。默认自动打开(当传递了ele参数时不自动打开)。传递一个false值，窗口在创建后并不打开。你可以把它保存到一个变量里

  }
*/
        Sudu.dialog = function(options) {
            var user_onshow;
            var user_onshown;
            if (options.onshow) {
                var user_onshow = options.onshow;
                delete options.onshow;
            }
            if (options.onshown) {
                var user_onshown = options.onshown;
                delete options.onshown;
            }
            if (options.onhide) {
                var user_onhide = options.onhide;
                delete options.onhide;
            }
            if (options.onhidden) {
                var user_onhidden = options.onhidden;
                delete options.onhidden;
            }

            if (options.ele) {
                options.autodestroy = false;
                options.show = false;
            }

            var defopts = {
                message: 'Loading...',
                onshow: function(dlg) {
                    if (!options.footer) {
                        dlg.getModalFooter().hide();
                    }

                    if (options.ele && !dlg.ele_inserted) {
                        var ele = options.ele;
                        if (typeof (ele) == 'string') {
                            if (ele.substr(0, 1) != '#') ele = '#' + ele;
                        }
                        ele = $(ele);
                        if (options.ele_insert_mode == 'copy') {
                            var ele = ele[0].cloneNode(true);
                        }
                        if (ele[0].tagName.toLowerCase() == 'form') {
                            ele = $('<div></div>').append(ele);
                        }
                        dlg.getModalBody().html('').append(ele.show());
                        dlg.ele_inserted = true;
                    }

                    if (typeof (user_onshow) == 'function') {
                        user_onshow(dlg);
                    }
                }
            };
            var frameid = 'dlg_iframe_' + new Date().getTime();
            var wait_str = '<div class="alert alert-info text-center" style="position:absolute;width:100%;left:0;top:0" id="' + frameid + '_loading"><i class="glyphicon glyphicon-asterisk icon-spin"></i> 内容加载中，请稍候...</div>';
            if (options.url) {
                defopts.message = options.message || wait_str;
            }
            defopts.onshown = function(dlg) {
                if (options.url) {
                    if (options.iframe) {
                        dlg.getModalBody().html(wait_str + '<iframe height="100%" width="100%" frameborder="0" scrolling="auto" allowtransparency="true" hspace="0" vspace="0" marginheight="0" marginwidth="0" id="' + frameid + '" src="' + options.url + '" class="dlg_iframe"></iframe>');
                        jQuery('#' + frameid).bind('load', function() {
                            $('#' + frameid + '_loading').remove();
                        });
                    } else {
                        dlg.xhr = jq.ajax({
                            url: options.url,
                            data: options.data || null,
                            success: function(html) {
                                dlg.$modalBody.html(html);
                            },
                            error: (options.ajax_error || function() { })()
                        });
                    }
                }

                if (typeof (user_onshown) == 'function') {
                    user_onshown(dlg);
                }
            }

            defopts.onhide = function(dlg) {
                if (dlg.xhr) {
                    dlg.xhr.abort();
                }

                if (typeof (user_onhide) == 'function') {
                    user_onhide(dlg);
                }
            }

            defopts.onhidden = function(dlg) {
                if (typeof (user_onhidden) == 'function') {
                    user_onhidden(dlg);
                }
            }

            var dialog = new BootstrapDialog(jq.extend({}, defopts, options));
            if (options.show || options.show === undefined) dialog.open();
            return dialog;
        }

        Sudu.dialogCloseAll = function() {
            BootstrapDialog.closeAll();
        }
    } (window.jQuery);


    //==========================
    /*
    ajax loader
    */
    ; (function($, undefined) {
        "use strict";

        var pluginName = 'zajaxloader';

        $[pluginName] = function(el, options) {
            var container = typeof (el) == 'string' ? $(el) : $(el);
            if (!container.length) return;

            container.find('.zajaxoverlay').remove();

            if (options == 'remove') {
                return;
            }

            options = jQuery.extend({}, $[pluginName].options, options);

            container.css('position', 'relative');

            var czindex = container.css('z-index') - 0;
            var overlay_zindex = isNaN(czindex) ? 1 : czindex + 1;

            // Create the overlay 
            var overlay = $('<div></div>').css({
                'background-color': options.bgColor,
                'opacity': options.opacity,
                'width': '100%',
                'height': container.height(),
                'position': 'absolute',
                'top': '0px',
                'left': '0px',
                'z-index': overlay_zindex
            }).addClass('zajaxoverlay');

            var gif_top = Math.floor(container.height() / 2) - 30;
            if (gif_top < 0) gif_top = 0;
            container.append(
			overlay.append(
				$('<div></div>').addClass('zajaxloader')
			).fadeIn(options.duration)
		);
        };

        $.extend($[pluginName], {
            options: {
                color: '#428BCA',
                bgColor: '#eee',
                duration: 200,
                opacity: 0.7,
                classOveride: 'fast'//false
            }
        });
    })(jQuery);
